{"version":3,"sources":["components/AddOption.js","actions/index.js","components/Option.js","components/Options.js","components/Action.js","components/Header.js","components/OptionModal.js","components/App.js","reducers/index.js","index.js"],"names":["AddOption","state","error","undefined","onAddOption","e","preventDefault","props","target","elements","option","value","trim","setState","this","className","onSubmit","type","name","React","Component","changeValue","id","payload","connect","incrementValue","decrementValue","count","optionText","onFocus","currentValue","toString","onChange","test","Math","abs","length","parseInt","style","color","onClick","isNaN","options","deleteOptions","currentTotalValue","map","el","reduce","a","b","useEffect","filter","fontStyle","index","key","openModal","disabled","hasOptions","Header","title","subtitle","defaultProps","OptionModal","componentDidMount","Modal","setAppElement","isOpen","openingModal","contentLabel","onRequestClose","closeModal","closeTimeoutMS","opt","totalValue","fontFamily","App","indexOf","addOption","json","localStorage","getItem","JSON","parse","addOptions","stringify","setItem","endRound","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","getElementById"],"mappings":"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","file":"static/js/main.32cd204e.chunk.js","sourcesContent":["import React from 'react'\r\nexport default class AddOption extends React.Component {\r\n  state = {\r\n    error: undefined,\r\n  }\r\n  onAddOption = (e) => {\r\n    e.preventDefault()\r\n    const error = this.props.onAddOption(e.target.elements.option.value.trim())\r\n    this.setState(() => ({ error }))\r\n    if (!error) {\r\n      e.target.elements.option.value = ''\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.error && (\r\n          <p className=\"add-option-error\">{this.state.error}</p>\r\n        )}\r\n        <form className=\"add-option\" onSubmit={this.onAddOption}>\r\n          <input className=\"add-option__input\" type=\"text\" name=\"option\" />\r\n          <button className=\"button\">+</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","export const addOption = (id) => {\r\n  return {\r\n    type: 'ADD_OPTION',\r\n    payload: {\r\n      id,\r\n      currentValue: 0,\r\n      totalValue: [],\r\n    },\r\n  }\r\n}\r\nexport const addOptions = (options) => {\r\n  return {\r\n    type: 'ADD_OPTIONS',\r\n    payload: options,\r\n  }\r\n}\r\nexport const deleteOptions = () => {\r\n  return {\r\n    type: 'DELETE_OPTIONS',\r\n  }\r\n}\r\nexport const incrementValue = (id) => {\r\n  return {\r\n    type: 'INCREMENT',\r\n    payload: {\r\n      id,\r\n    },\r\n  }\r\n}\r\nexport const changeValue = (id, value) => {\r\n  return {\r\n    type: 'CHANGE',\r\n    payload: {\r\n      id,\r\n      value,\r\n    },\r\n  }\r\n}\r\nexport const decrementValue = (id) => {\r\n  return {\r\n    type: 'DECREMENT',\r\n    payload: {\r\n      id,\r\n    },\r\n  }\r\n}\r\nexport const endRound = () => {\r\n  return {\r\n    type: 'END_ROUND',\r\n  }\r\n}\r\nexport const openModal = () => {\r\n  return {\r\n    type: 'OPEN_MODAL',\r\n  }\r\n}\r\nexport const closeModal = () => {\r\n  return {\r\n    type: 'CLOSE_MODAL',\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { incrementValue, decrementValue, changeValue } from '../actions'\r\n\r\nconst Option = (props) => (\r\n  <div className=\"option\">\r\n    <p className=\"option__text\">\r\n      {props.count}. {props.optionText}\r\n    </p>\r\n    <div className=\"option__action\">\r\n      <input\r\n        onFocus={\r\n          () => {\r\n            if(props.currentValue.toString() === '0') props.changeValue(props.id, '-')\r\n          }\r\n        }\r\n        onChange={(e) => {\r\n          if (props.currentValue !== 0)\r\n            if (\r\n              /^([+-]?[1-9]\\d*|0|-)$/.test(e.target.value) &&\r\n              Math.abs(e.target.value).toString().length < 3\r\n            ) \r\n              props.changeValue(\r\n                props.id,\r\n                parseInt(e.target.value) ? parseInt(e.target.value) : '-'\r\n              )\r\n          if (!e.target.value) props.changeValue(props.id, 0)\r\n          else\r\n            props.changeValue(\r\n              props.id,\r\n              parseInt(e.target.value) ? parseInt(e.target.value) : '-'\r\n            )\r\n          if (e.target.value > 100 || e.target.value < -100)\r\n            props.changeValue(props.id, parseInt(e.target.value / 10))\r\n        }}\r\n        type=\"text\"\r\n        value={props.currentValue}\r\n        style={{\r\n          color:\r\n            props.currentValue > 0\r\n              ? '#86c232'\r\n              : props.currentValue < 0\r\n              ? '#c70000'\r\n              : 'white',\r\n        }}\r\n      />\r\n      <button\r\n        className=\"button minus\"\r\n        onClick={() =>\r\n          !isNaN(props.currentValue)\r\n            ? props.decrementValue(props.id)\r\n            : props.changeValue(props.id, -1)\r\n        }\r\n      >\r\n        -\r\n      </button>\r\n      <button\r\n        className=\"button\"\r\n        onClick={() =>\r\n          !isNaN(props.currentValue)\r\n            ? props.incrementValue(props.id)\r\n            : props.changeValue(props.id, 0)\r\n        }\r\n      >\r\n        +\r\n      </button>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default connect(null, { incrementValue, decrementValue, changeValue })(\r\n  Option\r\n)\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Option from './Option'\r\nimport { deleteOptions, changeValue } from '../actions'\r\n\r\nconst Options = (props) => {\r\n  const currentTotalValue = props.options\r\n    .map((el) => el.currentValue)\r\n    .reduce((a, b) => a + b, 0)\r\n  useEffect(() => {\r\n    if (\r\n      props.options.length > 1 &&\r\n      props.options.filter((e) => e.currentValue === 0).length === 1 &&\r\n      !isNaN(currentTotalValue) &&\r\n      currentTotalValue !== 0\r\n    )\r\n      props.changeValue(\r\n        props.options.filter((e) => e.currentValue === 0)[0].id,\r\n        currentTotalValue * -1\r\n      )\r\n  })\r\n  return (\r\n    <div>\r\n      <div className=\"widget-header\">\r\n        <h3 className=\"widget-header__title\">\r\n          Các con bạc:\r\n        </h3>\r\n        <button className=\"button button--link\" onClick={props.deleteOptions} style={{fontStyle: 'italic'}}>\r\n          Xoá hếtttt!!!\r\n        </button>\r\n      </div>\r\n      {props.options.length === 0 && (\r\n        <p className=\"widget-message\">\r\n          Điền tên người anh em vào dưới kia\r\n        </p>\r\n      )}\r\n      {props.options.map((option, index) => (\r\n        <Option\r\n          id={option.id}\r\n          key={index}\r\n          count={index + 1}\r\n          currentValue={option.currentValue}\r\n          optionText={option.id}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { options: state.options }\r\n}\r\n\r\nexport default connect(mapStateToProps, { deleteOptions, changeValue })(Options)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { openModal } from '../actions'\r\n\r\nconst Action = (props) => (\r\n  <div>\r\n    <button\r\n      className=\"big-button\"\r\n      disabled={!props.hasOptions}\r\n      onClick={props.openModal}\r\n    >\r\n      Tính tiền!\r\n    </button>\r\n  </div>\r\n)\r\n\r\nexport default connect(null, { openModal })(Action)\r\n","import React from 'react'\r\n\r\nconst Header = (props) => (\r\n  <div className=\"header\">\r\n    <div className=\"container\">\r\n      <h1 className=\"header__title\">{props.title}</h1>\r\n      <p className=\"header__subtitle\">{props.subtitle}</p>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nHeader.defaultProps = {\r\n  title: 'Hỗ trợ con bạc',\r\n  subtitle: `“Cờ bạc người chơi là người thua, người không chơi không bao giờ thắng”`,\r\n}\r\nexport default Header\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Modal from 'react-modal'\r\nimport { closeModal } from '../actions'\r\n\r\nclass OptionModal extends React.Component {\r\n  componentDidMount = () => {\r\n    Modal.setAppElement('body')\r\n  }\r\n  render() {\r\n    return (\r\n      <Modal\r\n        isOpen={!!this.props.openingModal}\r\n        contentLabel=\"Show Results\"\r\n        onRequestClose={this.props.closeModal}\r\n        closeTimeoutMS={200}\r\n        className=\"modal\"\r\n      >\r\n        <h3 className=\"modal__title\">Tổng kết</h3>\r\n        <div className=\"modal__body\">\r\n          {this.props.options.map((opt, index) => (\r\n            <div className=\"option modal-child\" key={index}>\r\n              <p className=\"option__text\">{opt.id}</p>\r\n              <div className=\"option__action\">\r\n                <div\r\n                  style={{\r\n                    color:\r\n                      opt.totalValue.reduce((a, b) => a + b, 0) > 0\r\n                        ? '#86c232'\r\n                        : opt.totalValue.reduce((a, b) => a + b, 0) < 0\r\n                        ? '#c70000'\r\n                        : 'white',\r\n                    fontFamily: ['Zen Dots', \r\n                    'cursive']\r\n                  }}\r\n                >\r\n                  <span>{opt.totalValue.reduce((a, b) => a + b, 0)}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <button className=\"button\" onClick={this.props.closeModal}>\r\n          Okay\r\n        </button>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { options: state.options, openingModal: state.openingModal }\r\n}\r\n\r\nexport default connect(mapStateToProps, { closeModal })(OptionModal)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport AddOption from './AddOption'\r\nimport Options from './Options'\r\nimport Action from './Action'\r\nimport Header from './Header'\r\nimport OptionModal from './OptionModal'\r\nimport { addOption, addOptions, endRound } from '../actions'\r\n\r\nclass App extends React.Component {\r\n  onAddOption = (option) => {\r\n    if (option === '') {\r\n      return `Điền tên người anh em vào đây~`\r\n    } else if (this.props.options.map((el) => el.id).indexOf(option) > -1) {\r\n      return `Người anh em này xuất hiện rồi~~`\r\n    }\r\n    this.props.addOption(option)\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      const json = localStorage.getItem('options')\r\n      const options = JSON.parse(json)\r\n      if (options) {\r\n        this.props.addOptions(options)\r\n      }\r\n    } catch (e) {}\r\n  }\r\n  componentDidUpdate() {\r\n    const json = JSON.stringify(this.props.options)\r\n    localStorage.setItem('options', json)\r\n  }\r\n\r\n  render() {\r\n    const currentTotalValue = this.props.options\r\n      .map((el) => el.currentValue)\r\n      .reduce((a, b) => a + b, 0)\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div className=\"container\">\r\n          <Action hasOptions={this.props.options.length > 0} />\r\n          <div className=\"widget\">\r\n            <Options />\r\n            <button\r\n              className=\"big-button end-round\"\r\n              disabled={currentTotalValue !== 0}\r\n              onClick={this.props.endRound}\r\n            >\r\n              Chốt!\r\n            </button>\r\n            <AddOption onAddOption={this.onAddOption} />\r\n          </div>\r\n        </div>\r\n        <OptionModal />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    options: state.options,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { addOption, addOptions, endRound })(\r\n  App\r\n)\r\n","import { combineReducers } from 'redux'\r\n\r\nconst options = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'ADD_OPTION':\r\n      return [...state, action.payload]\r\n    case 'ADD_OPTIONS':\r\n      return [...state, ...action.payload]\r\n    case 'DELETE_OPTIONS':\r\n      return []\r\n    case 'INCREMENT': {\r\n      return state.map((opt) => {\r\n        if (opt.id === action.payload.id)\r\n          return {\r\n            id: action.payload.id,\r\n            currentValue: opt.currentValue + 1,\r\n            totalValue: opt.totalValue,\r\n          }\r\n        return opt\r\n      })\r\n    }\r\n    case 'DECREMENT': {\r\n      return state.map((opt) => {\r\n        if (opt.id === action.payload.id)\r\n          return {\r\n            id: action.payload.id,\r\n            currentValue: opt.currentValue - 1,\r\n            totalValue: opt.totalValue,\r\n          }\r\n        return opt\r\n      })\r\n    }\r\n    case 'CHANGE': {\r\n      return state.map((opt) => {\r\n        if (opt.id === action.payload.id)\r\n          return {\r\n            id: action.payload.id,\r\n            currentValue: action.payload.value,\r\n            totalValue: opt.totalValue,\r\n          }\r\n        return opt\r\n      })\r\n    }\r\n    case 'END_ROUND': {\r\n      return state.map((opt) => ({\r\n        id: opt.id,\r\n        currentValue: 0,\r\n        totalValue: [...opt.totalValue, opt.currentValue],\r\n      }))\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nconst modalState = (state = false, action) => {\r\n  switch (action.type) {\r\n    case 'OPEN_MODAL':\r\n      return true\r\n    case 'CLOSE_MODAL':\r\n      return false\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  options,\r\n  openingModal: modalState,\r\n})\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\n\r\nimport 'normalize.css/normalize.css'\r\nimport './styles/styles.scss'\r\nimport App from './components/App'\r\nimport reducers from './reducers'\r\n\r\nReactDOM.render(\r\n  <Provider store={createStore(reducers)}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}