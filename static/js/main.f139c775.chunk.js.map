{"version":3,"sources":["components/AddOption.js","components/Emoji.js","components/Option.js","actions/index.js","components/Options.js","components/Action.js","components/Header.js","components/OptionModal.js","components/App.js","reducers/index.js","index.js"],"names":["AddOption","state","error","undefined","onAddOption","e","preventDefault","props","target","elements","option","value","trim","setState","this","className","onSubmit","type","name","React","Component","Emoji","role","aria-label","label","aria-hidden","symbol","connect","incrementValue","id","payload","decrementValue","count","optionText","style","color","currentValue","onClick","options","deleteOptions","length","map","index","key","openModal","disabled","hasOptions","Header","title","subtitle","defaultProps","OptionModal","componentDidMount","Modal","setAppElement","isOpen","openingModal","contentLabel","onRequestClose","closeModal","closeTimeoutMS","opt","totalValue","reduce","a","b","App","el","indexOf","addOption","json","localStorage","getItem","JSON","parse","addOptions","stringify","setItem","currentTotalValue","endRound","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","getElementById"],"mappings":"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","file":"static/js/main.f139c775.chunk.js","sourcesContent":["import React from 'react'\r\nexport default class AddOption extends React.Component {\r\n  state = {\r\n    error: undefined,\r\n  }\r\n  onAddOption = (e) => {\r\n    e.preventDefault()\r\n    const error = this.props.onAddOption(e.target.elements.option.value.trim())\r\n    this.setState(() => ({ error }))\r\n    if (!error) {\r\n      e.target.elements.option.value = ''\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.error && (\r\n          <p className=\"add-option-error\">{this.state.error}</p>\r\n        )}\r\n        <form className=\"add-option\" onSubmit={this.onAddOption}>\r\n          <input className=\"add-option__input\" type=\"text\" name=\"option\" />\r\n          <button className=\"button\">+</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nconst Emoji = (props) => (\r\n  <span\r\n    className=\"emoji\"\r\n    role=\"img\"\r\n    aria-label={props.label ? props.label : ''}\r\n    aria-hidden={props.label ? 'false' : 'true'}\r\n  >\r\n    {props.symbol}\r\n  </span>\r\n)\r\nexport default Emoji\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { incrementValue, decrementValue } from '../actions'\r\n\r\nconst Option = (props) => (\r\n  <div className=\"option\">\r\n    <p className=\"option__text\">\r\n      {props.count}. {props.optionText}\r\n    </p>\r\n    <div className=\"option__action\">\r\n      <div>\r\n        <span\r\n          style={{\r\n            color:\r\n              props.currentValue > 0\r\n                ? '#86c232'\r\n                : props.currentValue < 0\r\n                ? '#c70000'\r\n                : 'white',\r\n          }}\r\n        >\r\n          {props.currentValue}\r\n        </span>\r\n      </div>\r\n      <button\r\n        className=\"button minus\"\r\n        onClick={() => props.decrementValue(props.id)}\r\n      >\r\n        -\r\n      </button>\r\n      <button className=\"button\" onClick={() => props.incrementValue(props.id)}>\r\n        +\r\n      </button>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default connect(null, { incrementValue, decrementValue })(Option)\r\n","export const addOption = (id) => {\r\n  return {\r\n    type: 'ADD_OPTION',\r\n    payload: {\r\n      id,\r\n      currentValue: 0,\r\n      totalValue: [],\r\n    },\r\n  }\r\n}\r\nexport const addOptions = (options) => {\r\n  return {\r\n    type: 'ADD_OPTIONS',\r\n    payload: options,\r\n  }\r\n}\r\nexport const deleteOptions = () => {\r\n  return {\r\n    type: 'DELETE_OPTIONS',\r\n  }\r\n}\r\nexport const incrementValue = (id) => {\r\n  return {\r\n    type: 'INCREMENT',\r\n    payload: {\r\n      id,\r\n    },\r\n  }\r\n}\r\nexport const decrementValue = (id) => {\r\n  return {\r\n    type: 'DECREMENT',\r\n    payload: {\r\n      id,\r\n    },\r\n  }\r\n}\r\nexport const endRound = () => {\r\n  return {\r\n    type: 'END_ROUND',\r\n  }\r\n}\r\nexport const openModal = () => {\r\n  return {\r\n    type: 'OPEN_MODAL',\r\n  }\r\n}\r\nexport const closeModal = () => {\r\n  return {\r\n    type: 'CLOSE_MODAL',\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Emoji from './Emoji'\r\nimport Option from './Option'\r\nimport { deleteOptions } from '../actions'\r\n\r\nconst Options = (props) => (\r\n  <div>\r\n    <div className=\"widget-header\">\r\n      <h3 className=\"widget-header__title\">\r\n        <Emoji symbol=\"üòé\" /> C√°c con b·∫°c:\r\n      </h3>\r\n      <button className=\"button button--link\" onClick={props.deleteOptions}>\r\n        Xo√° h·∫øtttt!!! <Emoji symbol=\"üò±\" />\r\n      </button>\r\n    </div>\r\n    {props.options.length === 0 && (\r\n      <p className=\"widget-message\">\r\n        ƒêi·ªÅn t√™n ng∆∞·ªùi anh em v√†o d∆∞·ªõi kia <Emoji symbol=\"üòè\" />\r\n      </p>\r\n    )}\r\n    {props.options.map((option, index) => (\r\n      <Option\r\n        id={option.id}\r\n        key={index}\r\n        count={index + 1}\r\n        currentValue={option.currentValue}\r\n        optionText={option.id}\r\n      />\r\n    ))}\r\n  </div>\r\n)\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { options: state.options }\r\n}\r\n\r\nexport default connect(mapStateToProps, { deleteOptions })(Options)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { openModal } from '../actions'\r\nimport Emoji from './Emoji'\r\n\r\nconst Action = (props) => (\r\n  <div>\r\n    <button\r\n      className=\"big-button\"\r\n      disabled={!props.hasOptions}\r\n      onClick={props.openModal}\r\n    >\r\n      T√≠nh ti·ªÅn! <Emoji symbol=\"üí∏üí∏üí∏\" />\r\n    </button>\r\n  </div>\r\n)\r\n\r\nexport default connect(null, { openModal })(Action)\r\n","import React from 'react'\r\n\r\nconst Header = (props) => (\r\n  <div className=\"header\">\r\n    <div className=\"container\">\r\n      <h1 className=\"header__title\">{props.title}</h1>\r\n      <p className=\"header__subtitle\">{props.subtitle}</p>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nHeader.defaultProps = {\r\n  title: 'H·ªó tr·ª£ con b·∫°c',\r\n  subtitle: `\"C·ªù b·∫°c ng∆∞·ªùi ch∆°i l√† ng∆∞·ªùi thua, ng∆∞·ªùi kh√¥ng ch∆°i kh√¥ng bao gi·ªù th·∫Øng\"`,\r\n}\r\nexport default Header\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Modal from 'react-modal'\r\nimport { closeModal } from '../actions'\r\n\r\nclass OptionModal extends React.Component {\r\n  componentDidMount = () => {\r\n    Modal.setAppElement('body')\r\n  }\r\n  render() {\r\n    return (\r\n      <Modal\r\n        isOpen={!!this.props.openingModal}\r\n        contentLabel=\"Show Results\"\r\n        onRequestClose={this.props.closeModal}\r\n        closeTimeoutMS={200}\r\n        className=\"modal\"\r\n      >\r\n        <h3 className=\"modal__title\">T·ªïng k·∫øt</h3>\r\n        <div className=\"modal__body\">\r\n          {this.props.options.map((opt, index) => (\r\n            <div className=\"option modal-child\" key={index}>\r\n              <p className=\"option__text\">{opt.id}</p>\r\n              <div className=\"option__action\">\r\n                <div\r\n                  style={{\r\n                    color:\r\n                      opt.totalValue.reduce((a, b) => a + b, 0) > 0\r\n                        ? '#86c232'\r\n                        : opt.totalValue.reduce((a, b) => a + b, 0) < 0\r\n                        ? '#c70000'\r\n                        : 'white',\r\n                  }}\r\n                >\r\n                  <span>{opt.totalValue.reduce((a, b) => a + b, 0)}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <button className=\"button\" onClick={this.props.closeModal}>\r\n          Okay\r\n        </button>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { options: state.options, openingModal: state.openingModal }\r\n}\r\n\r\nexport default connect(mapStateToProps, { closeModal })(OptionModal)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport AddOption from './AddOption'\r\nimport Options from './Options'\r\nimport Action from './Action'\r\nimport Header from './Header'\r\nimport OptionModal from './OptionModal'\r\nimport Emoji from './Emoji'\r\nimport { addOption, addOptions, endRound } from '../actions'\r\n\r\nclass App extends React.Component {\r\n  onAddOption = (option) => {\r\n    if (option === '') {\r\n      return `ƒêi·ªÅn t√™n ng∆∞·ªùi anh em v√†o ƒë√¢y~`\r\n    } else if (this.props.options.map((el) => el.id).indexOf(option) > -1) {\r\n      return `Ng∆∞·ªùi anh em n√†y xu·∫•t hi·ªán r·ªìi~~`\r\n    }\r\n    this.props.addOption(option)\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      const json = localStorage.getItem('options')\r\n      const options = JSON.parse(json)\r\n      if (options) {\r\n        this.props.addOptions(options)\r\n      }\r\n    } catch (e) {}\r\n  }\r\n  componentDidUpdate() {\r\n    const json = JSON.stringify(this.props.options)\r\n    localStorage.setItem('options', json)\r\n  }\r\n\r\n  render() {\r\n    const currentTotalValue = this.props.options\r\n      .map((el) => el.currentValue)\r\n      .reduce((a, b) => a + b, 0)\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div className=\"container\">\r\n          <Action hasOptions={this.props.options.length > 0} />\r\n          <div className=\"widget\">\r\n            <Options />\r\n            <button\r\n              className=\"big-button end-round\"\r\n              disabled={currentTotalValue !== 0}\r\n              onClick={this.props.endRound}\r\n            >\r\n              Ch·ªët! <Emoji symbol=\"ü§ë\" />\r\n            </button>\r\n            <AddOption onAddOption={this.onAddOption} />\r\n          </div>\r\n        </div>\r\n        <OptionModal />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    options: state.options,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { addOption, addOptions, endRound })(\r\n  App\r\n)\r\n","import { combineReducers } from 'redux'\r\n\r\nconst options = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'ADD_OPTION':\r\n      return [...state, action.payload]\r\n    case 'ADD_OPTIONS':\r\n      return [...state, ...action.payload]\r\n    case 'DELETE_OPTIONS':\r\n      return []\r\n    case 'INCREMENT': {\r\n      return state.map((opt) => {\r\n        if (opt.id === action.payload.id)\r\n          return {\r\n            id: action.payload.id,\r\n            currentValue: opt.currentValue + 1,\r\n            totalValue: opt.totalValue,\r\n          }\r\n        return opt\r\n      })\r\n    }\r\n    case 'DECREMENT': {\r\n      return state.map((opt) => {\r\n        if (opt.id === action.payload.id)\r\n          return {\r\n            id: action.payload.id,\r\n            currentValue: opt.currentValue - 1,\r\n            totalValue: opt.totalValue,\r\n          }\r\n        return opt\r\n      })\r\n    }\r\n    case 'END_ROUND': {\r\n      return state.map((opt) => ({\r\n        id: opt.id,\r\n        currentValue: 0,\r\n        totalValue: [...opt.totalValue, opt.currentValue],\r\n      }))\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nconst modalState = (state = false, action) => {\r\n  switch (action.type) {\r\n    case 'OPEN_MODAL':\r\n      return true\r\n    case 'CLOSE_MODAL':\r\n      return false\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  options,\r\n  openingModal: modalState,\r\n})\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\n\r\nimport 'normalize.css/normalize.css'\r\nimport './styles/styles.scss'\r\nimport App from './components/App'\r\nimport reducers from './reducers'\r\n\r\nReactDOM.render(\r\n  <Provider store={createStore(reducers)}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}